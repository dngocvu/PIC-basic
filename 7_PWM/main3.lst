CCS PCM C Compiler, Version 5.078, 43599               16-Dec-18 23:01

               Filename:   E:\bai tap vdk\7_PWM\main3.lst

               ROM used:   346 words (4%)
                           Largest free fragment is 2048
               RAM used:   11 (3%) at main() level
                           13 (4%) worst case
               Stack used: 0 locations
               Stack size: 8

*
0000:  MOVLW  01
0001:  MOVWF  0A
0002:  GOTO   10A
0003:  NOP
.................... #include <main3.h> 
.................... #include <16F887.h> 
.................... //////////// Standard Header file for the PIC16F887 device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2014 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F887 
....................  
.................... #list 
....................  
.................... #device ADC=10 
.................... #use delay(crystal=8000000) 
*
0026:  MOVLW  26
0027:  MOVWF  04
0028:  BCF    03.7
0029:  MOVF   00,W
002A:  BTFSC  03.2
002B:  GOTO   039
002C:  MOVLW  02
002D:  MOVWF  78
002E:  CLRF   77
002F:  DECFSZ 77,F
0030:  GOTO   02F
0031:  DECFSZ 78,F
0032:  GOTO   02E
0033:  MOVLW  97
0034:  MOVWF  77
0035:  DECFSZ 77,F
0036:  GOTO   035
0037:  DECFSZ 00,F
0038:  GOTO   02C
0039:  RETURN
....................  
....................  
.................... #define S1 PIN_B0 
.................... #define S2 PIN_B1 
.................... #define S3 PIN_B2 
.................... #define MOTOR_EN PIN_C0 
....................  
....................  
.................... char S1_state=1; 
.................... char S2_state=1; 
.................... char S3_state=1; 
....................  
.................... unsigned int16 VALUE=0; 
....................  
....................  
....................  
.................... //*******   PART A *************************************** 
.................... /* 
.................... void check_S1()            //duty = 0% 
.................... { 
....................    if(input(S1)==0) 
....................    { 
....................       SET_PWM2_DUTY(0); 
....................    } 
.................... } 
.................... void check_S2()            //duty = 50%  
.................... { 
....................    if(input(S2)==0) 
....................    { 
....................       SET_PWM2_DUTY((int16)250); 
....................    } 
.................... } 
.................... void check_S3()            //duty = 100% 
.................... { 
....................    if(input(S3)==0) 
....................    { 
....................       SET_PWM2_DUTY((int16)500); 
....................    } 
.................... } 
....................  
.................... void main() 
.................... { 
....................   set_tris_b(0x07); 
....................   setup_ccp2(ccp_PWM); 
....................   setup_timer_2(T2_DIV_BY_16,124,1); 
....................   SET_PWM2_DUTY(0);        //define duty = 0%  
....................    while(TRUE) 
....................    { 
....................       check_S1(); 
....................       check_S2(); 
....................       check_S3(); 
....................       //TODO: User Code 
....................    } 
....................  
.................... } 
.................... */ 
.................... //  ********* PART B *************************************** 
.................... /* 
.................... void check_S1()            //start/stop 
.................... { 
....................    if(input(S1)==0) 
....................    {   
....................       S1_state=0; 
....................       SET_PWM2_DUTY((INT16)50); 
....................    } 
....................    if((input(S1)==0)&(S1_state==0)) 
....................    {   
....................       S1_state=1; 
....................       SET_PWM2_DUTY(0); 
....................    } 
.................... } 
.................... void check_S2()            //PWM UP 10% 
.................... { 
....................    if(!input(S2)) 
....................    { 
....................       delay_ms(20); 
....................       if(!input(S2)) 
....................       { 
....................          if(VALUE<500) 
....................          { 
....................             VALUE=VALUE+50; 
....................             SET_PWM2_DUTY(VALUE); 
....................             while(!input(S2)); 
....................          } 
....................       } 
....................    } 
.................... } 
.................... void check_S3()            //PWM DOWN 10% 
.................... { 
....................    if(!input(S3)) 
....................    { 
....................       delay_ms(20); 
....................       if(!input(S3)) 
....................       { 
....................          if(VALUE>50) 
....................          { 
....................             VALUE=VALUE-50; 
....................             SET_PWM2_DUTY(VALUE); 
....................             while(!input(S3)); 
....................          } 
....................       } 
....................    } 
.................... } 
.................... void main() 
.................... {   
....................     
....................       set_tris_b(0x07); 
....................       setup_ccp2(ccp_PWM); 
....................       setup_timer_2(T2_DIV_BY_16,124,1); 
....................       SET_PWM2_DUTY((INT16)250);        //define duty = 50% 
....................    while(TRUE) 
....................    { 
....................       check_S1(); 
....................       check_S2(); 
....................       check_S3(); 
....................          //TODO: User Code 
....................    } 
....................  
.................... } 
.................... */ 
.................... //  ********* PART C  *************************************** 
....................  
.................... void check_S1()            //start/stop 
.................... { 
....................    if(input(S1)==0) 
*
0004:  BSF    03.5
0005:  BSF    06.0
0006:  BCF    03.5
0007:  BTFSC  06.0
0008:  GOTO   010
....................    {   
....................       S1_state=0; 
0009:  CLRF   20
....................       SET_PWM2_DUTY(0); 
000A:  CLRF   1B
....................       SET_PWM1_DUTY((INT16)500); 
000B:  MOVLW  7D
000C:  MOVWF  15
000D:  MOVF   17,W
000E:  ANDLW  CF
000F:  MOVWF  17
....................    } 
....................    if((input(S1)==0)&(S1_state==0)) 
0010:  BSF    03.5
0011:  BSF    06.0
0012:  MOVLW  00
0013:  BCF    03.5
0014:  BTFSS  06.0
0015:  MOVLW  01
0016:  MOVWF  27
0017:  MOVF   20,F
0018:  BTFSC  03.2
0019:  GOTO   01C
001A:  MOVLW  00
001B:  GOTO   01D
001C:  MOVLW  01
001D:  ANDWF  27,W
001E:  BTFSC  03.2
001F:  GOTO   023
....................    {   
....................       S1_state=1; 
0020:  MOVLW  01
0021:  MOVWF  20
....................       SET_PWM1_DUTY(0); 
0022:  CLRF   15
....................    } 
0023:  BCF    0A.3
0024:  BCF    0A.4
0025:  GOTO   156 (RETURN)
.................... } 
.................... void check_S2()            //SWAP DC 
.................... { 
....................    if(!input(S2)) 
*
003A:  BSF    03.5
003B:  BSF    06.1
003C:  BCF    03.5
003D:  BTFSC  06.1
003E:  GOTO   046
....................    { 
....................       delay_ms(20); 
003F:  MOVLW  14
0040:  MOVWF  26
0041:  CALL   026
....................       S2_state=0; 
0042:  CLRF   21
....................       SET_PWM2_DUTY(125); 
0043:  MOVLW  7D
0044:  MOVWF  1B
....................       SET_PWM1_DUTY(0); 
0045:  CLRF   15
....................        
....................    } 
....................    if((!input(S2))&(S2_state==0)) 
0046:  BSF    03.5
0047:  BSF    06.1
0048:  MOVLW  00
0049:  BCF    03.5
004A:  BTFSS  06.1
004B:  MOVLW  01
004C:  MOVWF  26
004D:  MOVF   21,F
004E:  BTFSC  03.2
004F:  GOTO   052
0050:  MOVLW  00
0051:  GOTO   053
0052:  MOVLW  01
0053:  ANDWF  26,W
0054:  BTFSC  03.2
0055:  GOTO   05E
....................    { 
....................       delay_ms(20); 
0056:  MOVLW  14
0057:  MOVWF  26
0058:  CALL   026
....................       S2_state=1; 
0059:  MOVLW  01
005A:  MOVWF  21
....................       SET_PWM2_DUTY(0); 
005B:  CLRF   1B
....................       SET_PWM1_DUTY(125); 
005C:  MOVLW  7D
005D:  MOVWF  15
....................    } 
005E:  BCF    0A.3
005F:  BCF    0A.4
0060:  GOTO   157 (RETURN)
.................... } 
.................... void check_S3()         //PWM CHANGE 
.................... { 
....................       if((!input(S3))&(S2_state==0)) 
0061:  BSF    03.5
0062:  BSF    06.2
0063:  MOVLW  00
0064:  BCF    03.5
0065:  BTFSS  06.2
0066:  MOVLW  01
0067:  MOVWF  26
0068:  MOVF   21,F
0069:  BTFSC  03.2
006A:  GOTO   06D
006B:  MOVLW  00
006C:  GOTO   06E
006D:  MOVLW  01
006E:  ANDWF  26,W
006F:  BTFSC  03.2
0070:  GOTO   0B4
....................       { 
....................        
....................          if(VALUE<500) 
0071:  MOVF   24,W
0072:  SUBLW  01
0073:  BTFSS  03.0
0074:  GOTO   094
0075:  BTFSS  03.2
0076:  GOTO   07B
0077:  MOVF   23,W
0078:  SUBLW  F3
0079:  BTFSS  03.0
007A:  GOTO   094
....................          { 
....................             VALUE=VALUE+125; 
007B:  MOVLW  7D
007C:  ADDWF  23,F
007D:  BTFSC  03.0
007E:  INCF   24,F
....................             SET_PWM2_DUTY(VALUE); 
007F:  MOVF   24,W
0080:  MOVWF  79
0081:  MOVF   23,W
0082:  MOVWF  78
0083:  RRF    79,F
0084:  RRF    78,F
0085:  RRF    79,F
0086:  RRF    78,F
0087:  RRF    79,F
0088:  MOVF   78,W
0089:  MOVWF  1B
008A:  RRF    79,F
008B:  RRF    79,W
008C:  ANDLW  30
008D:  MOVWF  77
008E:  MOVF   1D,W
008F:  ANDLW  CF
0090:  IORWF  77,W
0091:  MOVWF  1D
....................             SET_PWM1_DUTY(0); 
0092:  CLRF   15
....................          } 
0093:  GOTO   0B4
....................             else  
....................             { 
....................                if(VALUE==500) 
0094:  MOVF   23,W
0095:  SUBLW  F4
0096:  BTFSS  03.2
0097:  GOTO   0B4
0098:  DECFSZ 24,W
0099:  GOTO   0B4
....................                { 
....................                VALUE=VALUE-125; 
009A:  MOVLW  7D
009B:  SUBWF  23,F
009C:  MOVLW  00
009D:  BTFSS  03.0
009E:  MOVLW  01
009F:  SUBWF  24,F
....................                SET_PWM2_DUTY(VALUE); 
00A0:  MOVF   24,W
00A1:  MOVWF  79
00A2:  MOVF   23,W
00A3:  MOVWF  78
00A4:  RRF    79,F
00A5:  RRF    78,F
00A6:  RRF    79,F
00A7:  RRF    78,F
00A8:  RRF    79,F
00A9:  MOVF   78,W
00AA:  MOVWF  1B
00AB:  RRF    79,F
00AC:  RRF    79,W
00AD:  ANDLW  30
00AE:  MOVWF  77
00AF:  MOVF   1D,W
00B0:  ANDLW  CF
00B1:  IORWF  77,W
00B2:  MOVWF  1D
....................                SET_PWM1_DUTY(0); 
00B3:  CLRF   15
....................                } 
....................             } 
....................       } 
....................       if((!input(S3))&(S2_state==1)) 
00B4:  BSF    03.5
00B5:  BSF    06.2
00B6:  MOVLW  00
00B7:  BCF    03.5
00B8:  BTFSS  06.2
00B9:  MOVLW  01
00BA:  MOVWF  26
00BB:  DECFSZ 21,W
00BC:  GOTO   0BE
00BD:  GOTO   0C0
00BE:  MOVLW  00
00BF:  GOTO   0C1
00C0:  MOVLW  01
00C1:  ANDWF  26,W
00C2:  BTFSC  03.2
00C3:  GOTO   107
....................          { 
....................             if(VALUE<500) 
00C4:  MOVF   24,W
00C5:  SUBLW  01
00C6:  BTFSS  03.0
00C7:  GOTO   0E7
00C8:  BTFSS  03.2
00C9:  GOTO   0CE
00CA:  MOVF   23,W
00CB:  SUBLW  F3
00CC:  BTFSS  03.0
00CD:  GOTO   0E7
....................             { 
....................                VALUE=VALUE+125; 
00CE:  MOVLW  7D
00CF:  ADDWF  23,F
00D0:  BTFSC  03.0
00D1:  INCF   24,F
....................                SET_PWM1_DUTY(VALUE); 
00D2:  MOVF   24,W
00D3:  MOVWF  79
00D4:  MOVF   23,W
00D5:  MOVWF  78
00D6:  RRF    79,F
00D7:  RRF    78,F
00D8:  RRF    79,F
00D9:  RRF    78,F
00DA:  RRF    79,F
00DB:  MOVF   78,W
00DC:  MOVWF  15
00DD:  RRF    79,F
00DE:  RRF    79,W
00DF:  ANDLW  30
00E0:  MOVWF  77
00E1:  MOVF   17,W
00E2:  ANDLW  CF
00E3:  IORWF  77,W
00E4:  MOVWF  17
....................                SET_PWM2_DUTY(0); 
00E5:  CLRF   1B
....................             } 
00E6:  GOTO   107
....................             else  
....................             { 
....................                if(VALUE==500) 
00E7:  MOVF   23,W
00E8:  SUBLW  F4
00E9:  BTFSS  03.2
00EA:  GOTO   107
00EB:  DECFSZ 24,W
00EC:  GOTO   107
....................                   { 
....................                   VALUE=VALUE-125; 
00ED:  MOVLW  7D
00EE:  SUBWF  23,F
00EF:  MOVLW  00
00F0:  BTFSS  03.0
00F1:  MOVLW  01
00F2:  SUBWF  24,F
....................                   SET_PWM1_DUTY(VALUE); 
00F3:  MOVF   24,W
00F4:  MOVWF  79
00F5:  MOVF   23,W
00F6:  MOVWF  78
00F7:  RRF    79,F
00F8:  RRF    78,F
00F9:  RRF    79,F
00FA:  RRF    78,F
00FB:  RRF    79,F
00FC:  MOVF   78,W
00FD:  MOVWF  15
00FE:  RRF    79,F
00FF:  RRF    79,W
0100:  ANDLW  30
0101:  MOVWF  77
0102:  MOVF   17,W
0103:  ANDLW  CF
0104:  IORWF  77,W
0105:  MOVWF  17
....................                   SET_PWM2_DUTY(0); 
0106:  CLRF   1B
....................                   } 
....................              } 
....................           } 
0107:  BCF    0A.3
0108:  BCF    0A.4
0109:  GOTO   158 (RETURN)
....................  } 
.................... void main() 
010A:  MOVF   03,W
010B:  ANDLW  1F
010C:  MOVWF  03
010D:  MOVLW  01
010E:  MOVWF  20
010F:  MOVWF  21
0110:  MOVWF  22
0111:  CLRF   24
0112:  CLRF   23
0113:  MOVLW  FF
0114:  MOVWF  25
0115:  BSF    03.5
0116:  BSF    03.6
0117:  MOVF   09,W
0118:  ANDLW  C0
0119:  MOVWF  09
011A:  BCF    03.6
011B:  BCF    1F.4
011C:  BCF    1F.5
011D:  MOVLW  00
011E:  BSF    03.6
011F:  MOVWF  08
0120:  BCF    03.5
0121:  CLRF   07
0122:  CLRF   08
0123:  CLRF   09
0124:  BCF    03.7
.................... {   
....................     
....................       set_tris_b(0x07); 
0125:  MOVLW  07
0126:  BSF    03.5
0127:  BCF    03.6
0128:  MOVWF  06
....................       setup_ccp1(ccp_PWM); 
0129:  BCF    03.5
012A:  BCF    25.2
012B:  MOVF   25,W
012C:  BSF    03.5
012D:  MOVWF  07
012E:  BCF    03.5
012F:  BCF    07.2
0130:  MOVLW  0C
0131:  MOVWF  17
0132:  BSF    03.5
0133:  CLRF   1B
0134:  CLRF   1C
0135:  MOVLW  01
0136:  MOVWF  1D
....................       setup_ccp2(ccp_PWM); 
0137:  BCF    03.5
0138:  BCF    25.1
0139:  MOVF   25,W
013A:  BSF    03.5
013B:  MOVWF  07
013C:  BCF    03.5
013D:  BCF    07.1
013E:  MOVLW  0C
013F:  MOVWF  1D
....................       setup_timer_2(T2_DIV_BY_16,124,1); 
0140:  MOVLW  00
0141:  MOVWF  78
0142:  IORLW  06
0143:  MOVWF  12
0144:  MOVLW  7C
0145:  BSF    03.5
0146:  MOVWF  12
....................       SET_PWM1_DUTY(0);//define duty = 50% 
0147:  BCF    03.5
0148:  CLRF   15
....................       SET_PWM2_DUTY((INT16)250);//define duty = 50% 
0149:  MOVLW  3E
014A:  MOVWF  1B
014B:  MOVF   1D,W
014C:  ANDLW  CF
014D:  IORLW  20
014E:  MOVWF  1D
....................       OUTPUT_HIGH(MOTOR_EN); 
014F:  BCF    25.0
0150:  MOVF   25,W
0151:  BSF    03.5
0152:  MOVWF  07
0153:  BCF    03.5
0154:  BSF    07.0
....................    while(TRUE) 
....................    { 
....................       check_S1(); 
0155:  GOTO   004
....................       check_S2(); 
0156:  GOTO   03A
....................       check_S3(); 
0157:  GOTO   061
0158:  GOTO   155
....................          //TODO: User Code 
....................    } 
....................  
.................... } 
0159:  SLEEP

Configuration Fuses:
   Word  1: 2FE2   HS NOWDT PUT MCLR NOPROTECT NOCPD BROWNOUT IESO FCMEN NOLVP NODEBUG
   Word  2: 3FFF   BORV40 NOWRT

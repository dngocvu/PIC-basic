CCS PCM C Compiler, Version 5.078, 43599               07-Nov-18 23:07

               Filename:   E:\bai tap vdk\4_Button\bài12\main12.lst

               ROM used:   88 words (1%)
                           Largest free fragment is 2048
               RAM used:   9 (2%) at main() level
                           9 (2%) worst case
               Stack used: 0 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   004
0003:  NOP
.................... #define S1     PIN_D0 
.................... #define LED1   PIN_D3 
....................  
.................... #include <main12.h> 
.................... #include <16F887.h> 
.................... //////////// Standard Header file for the PIC16F887 device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2014 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F887 
....................  
.................... #list 
....................  
.................... #device ADC=10 
.................... #use delay(crystal=20000000) 
....................  
....................  
....................  
.................... char click=0; 
.................... int16 i=0; 
....................     
.................... void main() 
0004:  MOVF   03,W
0005:  ANDLW  1F
0006:  MOVWF  03
0007:  CLRF   20
0008:  CLRF   22
0009:  CLRF   21
000A:  BSF    03.5
000B:  BSF    03.6
000C:  MOVF   09,W
000D:  ANDLW  C0
000E:  MOVWF  09
000F:  BCF    03.6
0010:  BCF    1F.4
0011:  BCF    1F.5
0012:  MOVLW  00
0013:  BSF    03.6
0014:  MOVWF  08
0015:  BCF    03.5
0016:  CLRF   07
0017:  CLRF   08
0018:  CLRF   09
0019:  BCF    03.7
.................... {   
....................    set_tris_d(0b11110111); 
001A:  MOVLW  F7
001B:  BSF    03.5
001C:  BCF    03.6
001D:  MOVWF  08
....................    output_bit(LED1,0);      
001E:  BCF    03.5
001F:  BCF    08.3
0020:  BSF    03.5
0021:  BCF    08.3
....................    while(TRUE) 
....................    { 
....................       if(input(S1)==1) 
0022:  BSF    08.0
0023:  BCF    03.5
0024:  BTFSS  08.0
0025:  GOTO   04F
....................          { 
....................             while(input(S1)==1); //firstclick 
0026:  BSF    03.5
0027:  BSF    08.0
0028:  BCF    03.5
0029:  BTFSC  08.0
002A:  GOTO   026
....................                click=1;       
002B:  MOVLW  01
002C:  MOVWF  20
....................             for(i=0;i<2000;i++)   //time for doubleclick 
002D:  CLRF   22
002E:  CLRF   21
002F:  MOVF   22,W
0030:  SUBLW  07
0031:  BTFSS  03.0
0032:  GOTO   04F
0033:  BTFSS  03.2
0034:  GOTO   039
0035:  MOVF   21,W
0036:  SUBLW  CF
0037:  BTFSS  03.0
0038:  GOTO   04F
....................             { 
....................                if(input(S1)==1)  //secondclick 
0039:  BSF    03.5
003A:  BSF    08.0
003B:  BCF    03.5
003C:  BTFSS  08.0
003D:  GOTO   04B
....................                    { 
....................                      while(input(S1)==1) 
003E:  BSF    03.5
003F:  BSF    08.0
0040:  BCF    03.5
0041:  BTFSS  08.0
0042:  GOTO   04A
....................                      { 
....................                      output_bit(LED1,1);//output2 
0043:  BSF    08.3
0044:  BSF    03.5
0045:  BCF    08.3
....................                      click=2;  //doubleclick 
0046:  MOVLW  02
0047:  BCF    03.5
0048:  MOVWF  20
0049:  GOTO   03E
....................                      } 
....................                      break; 
004A:  GOTO   04F
....................                       
....................                   } 
004B:  INCF   21,F
004C:  BTFSC  03.2
004D:  INCF   22,F
004E:  GOTO   02F
....................             } 
....................          } 
....................       if(click==1) 
004F:  DECFSZ 20,W
0050:  GOTO   055
....................             output_bit(LED1,0);//output1 
0051:  BCF    08.3
0052:  BSF    03.5
0053:  BCF    08.3
0054:  BCF    03.5
0055:  BSF    03.5
0056:  GOTO   022
....................        
....................                   
....................       //TODO: User Code 
....................    } 
.................... } 
0057:  SLEEP

Configuration Fuses:
   Word  1: 2FE2   HS NOWDT PUT MCLR NOPROTECT NOCPD BROWNOUT IESO FCMEN NOLVP NODEBUG
   Word  2: 3FFF   BORV40 NOWRT

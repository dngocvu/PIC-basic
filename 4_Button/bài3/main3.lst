CCS PCM C Compiler, Version 5.078, 43599               06-Nov-18 07:33

               Filename:   E:\bai tap vdk\4_Button\bài3\main3.lst

               ROM used:   78 words (1%)
                           Largest free fragment is 2048
               RAM used:   9 (2%) at main() level
                           9 (2%) worst case
               Stack used: 0 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   004
0003:  NOP
.................... #define S1    PIN_D0 
.................... #define S2    PIN_D1 
.................... #define LED1  PIN_D3 
....................  
.................... #include <main3.h> 
.................... #include <16F887.h> 
.................... //////////// Standard Header file for the PIC16F887 device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2014 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F887 
....................  
.................... #list 
....................  
.................... #device ADC=10 
.................... #use delay(crystal=20000000) 
....................  
....................  
....................  
.................... char S1_state=0; 
.................... char LED1_state=0; 
....................  
.................... void main() 
0004:  MOVF   03,W
0005:  ANDLW  1F
0006:  MOVWF  03
0007:  CLRF   20
0008:  CLRF   21
0009:  BSF    03.5
000A:  BSF    03.6
000B:  MOVF   09,W
000C:  ANDLW  C0
000D:  MOVWF  09
000E:  BCF    03.6
000F:  BCF    1F.4
0010:  BCF    1F.5
0011:  MOVLW  00
0012:  BSF    03.6
0013:  MOVWF  08
0014:  BCF    03.5
0015:  CLRF   07
0016:  CLRF   08
0017:  CLRF   09
0018:  BCF    03.7
.................... { 
....................    set_tris_d(0b11110111); 
0019:  MOVLW  F7
001A:  BSF    03.5
001B:  BCF    03.6
001C:  MOVWF  08
....................    output_bit(LED1,0); 
001D:  BCF    03.5
001E:  BCF    08.3
001F:  BSF    03.5
0020:  BCF    08.3
....................     
....................    while(TRUE) 
....................    { 
....................       if(input(S1)==1) 
0021:  BSF    08.0
0022:  BCF    03.5
0023:  BTFSS  08.0
0024:  GOTO   027
....................          S1_state=1; 
0025:  MOVLW  01
0026:  MOVWF  20
....................       if(input(S2)==1) 
0027:  BSF    03.5
0028:  BSF    08.1
0029:  BCF    03.5
002A:  BTFSS  08.1
002B:  GOTO   02D
....................          LED1_state=0; 
002C:  CLRF   21
....................  
....................       if((input(S1)==0)&(S1_state==1)) 
002D:  BSF    03.5
002E:  BSF    08.0
002F:  MOVLW  00
0030:  BCF    03.5
0031:  BTFSS  08.0
0032:  MOVLW  01
0033:  MOVWF  23
0034:  DECFSZ 20,W
0035:  GOTO   037
0036:  GOTO   039
0037:  MOVLW  00
0038:  GOTO   03A
0039:  MOVLW  01
003A:  ANDWF  23,W
003B:  BTFSC  03.2
003C:  GOTO   044
....................          { 
....................             output_bit(LED1,1); 
003D:  BSF    08.3
003E:  BSF    03.5
003F:  BCF    08.3
....................             LED1_state=1; 
0040:  MOVLW  01
0041:  BCF    03.5
0042:  MOVWF  21
....................             S1_state=0; 
0043:  CLRF   20
....................          } 
....................       if(LED1_state==0) 
0044:  MOVF   21,F
0045:  BTFSS  03.2
0046:  GOTO   04B
....................          output_bit(LED1,0); 
0047:  BCF    08.3
0048:  BSF    03.5
0049:  BCF    08.3
004A:  BCF    03.5
004B:  BSF    03.5
004C:  GOTO   021
....................           
....................           
....................       //TODO: User Code 
....................    } 
....................  
.................... } 
004D:  SLEEP

Configuration Fuses:
   Word  1: 2FE2   HS NOWDT PUT MCLR NOPROTECT NOCPD BROWNOUT IESO FCMEN NOLVP NODEBUG
   Word  2: 3FFF   BORV40 NOWRT
